// Test de suppression de la section D√©boguer et informations syst√®me
console.log('üóëÔ∏è Test de suppression de la section D√©boguer...\n');

const fs = require('fs');
const path = require('path');

// V√©rifier les fichiers supprim√©s
const deletedFiles = [
  'src/components/AdminDebug.tsx'
];

console.log('üìã Fichiers supprim√©s:');
deletedFiles.forEach(file => {
  const fullPath = path.join(__dirname, '..', file);
  if (!fs.existsSync(fullPath)) {
    console.log(`‚úÖ ${file} - Supprim√©`);
  } else {
    console.log(`‚ùå ${file} - Encore pr√©sent`);
  }
});

// V√©rifier les modifications dans AdminPanel.tsx
console.log('\nüìã Modifications dans AdminPanel.tsx:');
const adminPanelPath = path.join(__dirname, '..', 'src', 'components', 'AdminPanel.tsx');
if (fs.existsSync(adminPanelPath)) {
  const content = fs.readFileSync(adminPanelPath, 'utf8');
  
  if (!content.includes('D√©boguer')) {
    console.log('‚úÖ Bouton D√©boguer supprim√©');
  } else {
    console.log('‚ùå Bouton D√©boguer encore pr√©sent');
  }
  
  if (!content.includes('Version:')) {
    console.log('‚úÖ Section Version supprim√©e');
  } else {
    console.log('‚ùå Section Version encore pr√©sente');
  }
  
  if (!content.includes('Mode:')) {
    console.log('‚úÖ Section Mode supprim√©e');
  } else {
    console.log('‚ùå Section Mode encore pr√©sente');
  }
  
  if (!content.includes('Base:')) {
    console.log('‚úÖ Section Base supprim√©e');
  } else {
    console.log('‚ùå Section Base encore pr√©sente');
  }
  
  if (!content.includes('AlertTriangle')) {
    console.log('‚úÖ Import AlertTriangle supprim√©');
  } else {
    console.log('‚ùå Import AlertTriangle encore pr√©sent');
  }
  
  if (!content.includes('onOpenDebug')) {
    console.log('‚úÖ Param√®tre onOpenDebug supprim√©');
  } else {
    console.log('‚ùå Param√®tre onOpenDebug encore pr√©sent');
  }
} else {
  console.log('‚ùå Fichier AdminPanel.tsx non trouv√©');
}

// V√©rifier les modifications dans App.tsx
console.log('\nüìã Modifications dans App.tsx:');
const appPath = path.join(__dirname, '..', 'src', 'App.tsx');
if (fs.existsSync(appPath)) {
  const content = fs.readFileSync(appPath, 'utf8');
  
  if (!content.includes('AdminDebug')) {
    console.log('‚úÖ Import AdminDebug supprim√©');
  } else {
    console.log('‚ùå Import AdminDebug encore pr√©sent');
  }
  
  if (!content.includes('showAdminDebug')) {
    console.log('‚úÖ √âtat showAdminDebug supprim√©');
  } else {
    console.log('‚ùå √âtat showAdminDebug encore pr√©sent');
  }
  
  if (!content.includes('setShowAdminDebug')) {
    console.log('‚úÖ Fonction setShowAdminDebug supprim√©e');
  } else {
    console.log('‚ùå Fonction setShowAdminDebug encore pr√©sente');
  }
  
  if (!content.includes('Debug')) {
    console.log('‚úÖ Bouton Debug supprim√© de l\'interface');
  } else {
    console.log('‚ùå Bouton Debug encore pr√©sent');
  }
} else {
  console.log('‚ùå Fichier App.tsx non trouv√©');
}

console.log('\nüéØ R√©sum√©:');
console.log('=' .repeat(50));
console.log('‚úÖ Section D√©boguer supprim√©e de l\'interface admin');
console.log('‚úÖ Informations syst√®me (Version, Mode, Base) supprim√©es');
console.log('‚úÖ Composant AdminDebug supprim√©');
console.log('‚úÖ Bouton Debug supprim√© de l\'interface principale');
console.log('‚úÖ Toutes les r√©f√©rences au d√©bogage supprim√©es');
console.log('\nüí° La section D√©boguer et les informations syst√®me ont √©t√© compl√®tement supprim√©es !');
