// V√©rifier les utilisateurs existants et cr√©er un compte de test
import { executeQuery } from './config/database.js';
import bcrypt from 'bcryptjs';

async function checkAndCreateUser() {
    const testEmail = 'dabadiallo694@gmail.com';
    
    console.log('üîç V√©rification des utilisateurs existants...\n');
    
    try {
        // 1. Lister tous les utilisateurs
        const allUsers = await executeQuery('SELECT id, username, email, full_name FROM users');
        
        console.log('üìã Utilisateurs existants:');
        if (allUsers.length > 0) {
            allUsers.forEach((user, index) => {
                console.log(`   ${index + 1}. ${user.username} (${user.email})`);
            });
        } else {
            console.log('   Aucun utilisateur trouv√©');
        }
        
        // 2. V√©rifier si l'utilisateur de test existe
        console.log(`\nüîç V√©rification de l'utilisateur: ${testEmail}`);
        const testUser = await executeQuery(
            'SELECT id, username, email, full_name FROM users WHERE email = ?',
            [testEmail]
        );
        
        if (testUser.length > 0) {
            console.log('‚úÖ Utilisateur trouv√©:', testUser[0]);
        } else {
            console.log('‚ùå Utilisateur non trouv√©, cr√©ation en cours...');
            
            // 3. Cr√©er l'utilisateur de test
            const hashedPassword = await bcrypt.hash('motdepasse123', 12);
            const result = await executeQuery(
                'INSERT INTO users (username, email, password, full_name, email_verified, created_at) VALUES (?, ?, ?, ?, ?, NOW())',
                ['dabad', testEmail, hashedPassword, 'Daba Diallo', true]
            );
            
            console.log('‚úÖ Utilisateur cr√©√© avec succ√®s!');
            console.log('   Username: dabad');
            console.log('   Email:', testEmail);
            console.log('   Mot de passe: motdepasse123');
        }
        
        // 4. Nettoyer les anciens codes de r√©initialisation
        console.log('\nüßπ Nettoyage des anciens codes de r√©initialisation...');
        await executeQuery('DELETE FROM password_reset_codes WHERE email = ?', [testEmail]);
        console.log('‚úÖ Codes nettoy√©s');
        
    } catch (error) {
        console.error('‚ùå Erreur:', error);
    }
}

checkAndCreateUser();
